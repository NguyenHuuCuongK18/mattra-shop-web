{
  "openapi": "3.0.3",
  "info": {
    "title": "Mạt Trà API",
    "description": "API documentation for the Mạt Trà e-commerce platform",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://mattra-shop-web.vercel.app",
      "description": "Production server"
    },
    {
      "url": "http://localhost:9999",
      "description": "Local server"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "message": { "type": "string" }
        },
        "required": ["message"]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "username": { "type": "string" },
          "name": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "avatar": { "type": "string" },
          "phone": { "type": "string" },
          "address": { "type": "string" },
          "role": { "type": "string", "enum": ["user","subscriber","admin"] },
          "subscription": {
            "type": "object",
            "properties": {
              "subscriptionId": { "type": "string" },
              "status": { "type": "string", "enum": ["active","inactive"] },
              "startDate": { "type": "string","format":"date-time" },
              "endDate": { "type": "string","format":"date-time" }
            }
          },
          "vouchers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "voucherId": { "type": "string" },
                "status": { "type": "string", "enum": ["available","used","expired"] }
              },
              "required": ["voucherId","status"]
            }
          }
        },
        "required": ["id","username","name","email","role"]
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" }
        },
        "required": ["id","name"]
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "price": { "type": "number","minimum":0 },
          "stock": { "type": "integer","minimum":0 },
          "image": { "type": "string" },
          "category": { "type":"string" },
          "isFeatured": { "type":"boolean" }
        },
        "required": ["id","name","price","stock"]
      },
      "Review": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "productId": { "type": "string" },
          "userId": { "type": "string" },
          "rating": { "type": "integer","minimum":1,"maximum":5 },
          "comment": { "type": "string" },
          "createdAt": { "type":"string","format":"date-time" }
        },
        "required": ["id","productId","userId","rating","comment"]
      },
      "PromptCategory": {
        "type": "object",
        "properties": {
          "id": { "type":"string" },
          "name": { "type":"string" },
          "description": { "type":"string" },
          "type": { "type":"string","enum":["diet","info","other","recipe"] },
          "promptText": { "type":"string" },
          "isActive": { "type":"boolean" },
          "createdAt": { "type":"string","format":"date-time" },
          "updatedAt": { "type":"string","format":"date-time" }
        },
        "required": ["id","name","promptText"]
      }
    }
  },
  "security": [
    { "BearerAuth": [] }
  ],
  "paths": {
    "/api/users/register": {
      "post": {
        "tags": ["User"],
        "summary": "Register new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type":"object",
                "properties": {
                  "username":{"type":"string"},
                  "name":{"type":"string"},
                  "email":{"type":"string","format":"email"},
                  "password":{"type":"string"},
                  "address":{"type":"string"}
                },
                "required":["username","name","email","password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description":"User registered",
            "content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}
          },
          "400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},
          "500":{"description":"Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["User"],
        "summary": "Login user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type":"object",
                "properties": {
                  "identification":{"type":"string"},
                  "password":{"type":"string"}
                },
                "required":["identification","password"]
              }
            }
          }
        },
        "responses": {
          "200":{"description":"Logged in","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},
          "400":{"description":"Invalid credentials","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},
          "500":{"description":"Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}
        }
      }
    },
    "/api/users/profile": {
      "get": {
        "tags":["User"],
        "summary":"Get own profile",
        "security":[{"BearerAuth":[]}],
        "responses":{
          "200":{"description":"User profile","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},
          "401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}
        }
      }
    },
    "/api/users/change-password": {
      "put": {
        "tags":["User"],
        "summary":"Change password",
        "security":[{"BearerAuth":[]}],
        "requestBody":{
          "required":true,
          "content":{"application/json":{"schema":{
            "type":"object",
            "properties":{
              "oldPassword":{"type":"string"},
              "newPassword":{"type":"string"}
            },
            "required":["oldPassword","newPassword"]
          }}}
        },
        "responses":{
          "200":{"description":"Password changed"},
          "400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},
          "401":{"description":"Unauthorized"}
        }
      }
    },
    "/api/users/request-password-reset": {
      "post": {
        "tags":["User"],
        "summary":"Request password reset",
        "requestBody":{
          "required":true,
          "content":{"application/json":{"schema":{
            "type":"object","properties":{"email":{"type":"string","format":"email"}},"required":["email"]
          }}}
        },
        "responses":{
          "200":{"description":"Email sent"},
          "400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}
        }
      }
    },
    "/api/users/reset-password": {
      "post": {
        "tags":["User"],
        "summary":"Reset password",
        "requestBody":{
          "required":true,
          "content":{"application/json":{"schema":{
            "type":"object",
            "properties":{
              "token":{"type":"string"},
              "newPassword":{"type":"string"}
            },
            "required":["token","newPassword"]
          }}}
        },
        "responses":{
          "200":{"description":"Password reset"},
          "400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}
        }
      }
    },
    "/api/users/update": {
      "put": {
        "tags":["User"],
        "summary":"Update user info",
        "security":[{"BearerAuth":[]}],
        "requestBody":{
          "required":true,
          "content":{"application/json":{"schema":{
            "type":"object",
            "properties":{
              "name":{"type":"string"},
              "avatar":{"type":"string"},
              "phone":{"type":"string"},
              "address":{"type":"string"}
            }
          }}}
        },
        "responses":{
          "200":{"description":"User updated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},
          "401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "tags":["User"],
        "summary":"Logout user",
        "security":[{"BearerAuth":[]}],
        "responses":{
          "200":{"description":"Logged out"},
          "401":{"description":"Unauthorized"}
        }
      }
    }
  },
  
  "paths": {
    "/api/users": {
      "get": {
        "tags":["User"],
        "summary":"Get all users (admin only)",
        "security":[{"BearerAuth":[]}],
        "responses":{
          "200":{"description":"List of users","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/User"}}}}},
          "403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}
        }
      }
    },
    "/api/users/{id}/subscription": {
      "put": {
        "tags":["User"],
        "summary":"Update user's subscription status (admin only)",
        "security":[{"BearerAuth":[]}],
        "parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],
        "requestBody":{"required":true,"content":{"application/json":{"schema":{
          "type":"object","properties":{"status":{"type":"string","enum":["active","inactive"]}},"required":["status"]
        }}}},
        "responses":{
          "200":{"description":"Subscription status updated"},
          "403":{"description":"Forbidden"},
          "404":{"description":"User not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}
        }
      }
    },
    "/api/users/update-avatar": {
      "post": {
        "tags":["User"],
        "summary":"Update user avatar",
        "security":[{"BearerAuth":[]}],
        "requestBody":{
          "required":true,
          "content":{"multipart/form-data":{"schema":{
            "type":"object","properties":{"avatar":{"type":"string","format":"binary"}}, "required":["avatar"]
          }}}
        },
        "responses":{
          "200":{"description":"Avatar updated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},
          "401":{"description":"Unauthorized"}
        }
      }
    },
    "/api/categories/create": {
      "post": {
        "tags":["Category"],
        "summary":"Create category (admin only)",
        "security":[{"BearerAuth":[]}],
        "requestBody":{"required":true,"content":{"application/json":{"schema":{
          "type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"}},"required":["name"]
        }}}},
        "responses":{
          "201":{"description":"Category created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Category"}}}},
          "403":{"description":"Forbidden"}
        }
      }
    },
    "/api/categories": {
      "get": {
        "tags":["Category"],
        "summary":"Get all categories",
        "responses":{
          "200":{"description":"List of categories","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Category"}}}}}
        }
      }
    },
    "/api/categories/{id}": {
      "get": {
        "tags":["Category"],
        "summary":"Get category by ID",
        "parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],
        "responses":{
          "200":{"description":"Category detail","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Category"}}}},
          "404":{"description":"Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}
        }
      }
    },
    "/api/categories/update/{id}": {
      "put": {
        "tags":["Category"],
        "summary":"Update category (admin only)",
        "security":[{"BearerAuth":[]}],
        "parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],
        "requestBody":{"required":true,"content":{"application/json":{"schema":{
          "type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"}}}}}},
        "responses":{
          "200":{"description":"Category updated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Category"}}}},
          "403":{"description":"Forbidden"}
        }
      }
    },
    "/api/categories/delete/{id}": {
      "delete": {
        "tags":["Category"],
        "summary":"Delete category (admin only)",
        "security":[{"BearerAuth":[]}],
        "parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],
        "responses":{
          "200":{"description":"Category deleted"},
          "403":{"description":"Forbidden"}
        }
      }
    },
    "/api/products/create": {
      "post": {
        "tags":["Product"],
        "summary":"Create product (admin only)",
        "security":[{"BearerAuth":[]}],
        "requestBody":{
          "required":true,
          "content":{"multipart/form-data":{"schema":{
            "type":"object",
            "properties":{
              "name":{"type":"string"},
              "description":{"type":"string"},
              "price":{"type":"number"},
              "stock":{"type":"integer"},
              "category":{"type":"string"},
              "isFeatured":{"type":"boolean"},
              "image":{"type":"string","format":"binary"}
            },
            "required":["name","price","stock","category"]
          }}}
        },
        "responses":{
          "201":{"description":"Product created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Product"}}}},
          "403":{"description":"Forbidden"}
        }
      }
    },
    "/api/products": {
      "get": {
        "tags":["Product"],
        "summary":"Get all products",
        "responses":{
          "200":{"description":"List of products","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Product"}}}}}
        }
      }
    },
    "/api/products/{id}": {
      "get": {
        "tags":["Product"],
        "summary":"Get product by ID",
        "parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],
        "responses":{
          "200":{"description":"Product detail","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Product"}}}},
          "404":{"description":"Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}
        }
      }
    },
    "/api/products/update/{id}": {
      "put": {
        "tags":["Product"],
        "summary":"Update product (admin only)",
        "security":[{"BearerAuth":[]}],
        "parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],
        "requestBody":{"required":true,"content":{"multipart/form-data":{"schema":{
          "type":"object",
          "properties":{
            "name":{"type":"string"},
            "description":{"type":"string"},
            "price":{"type":"number"},
            "stock":{"type":"integer"},
            "category":{"type":"string"},
            "isFeatured":{"type":"boolean"},
            "image":{"type":"string","format":"binary"}
          }
        }}}},
        "responses":{
          "200":{"description":"Product updated"},
          "403":{"description":"Forbidden"}
        }
      }
    },
    "/api/products/delete/{id}": {
      "delete": {
        "tags":["Product"],
        "summary":"Delete product (admin only)",
        "security":[{"BearerAuth":[]}],
        "parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],
        "responses":{
          "200":{"description":"Product deleted"},
          "403":{"description":"Forbidden"}
        }
      }
    }
  },
  "paths": {
    "/api/review/create": {
      "post": {
        "tags":["Review"],
        "summary":"Create a new review",
        "security":[{"BearerAuth":[]}],
        "requestBody":{"required":true,"content":{"application/json":{"schema":{
          "type":"object",
          "properties":{
            "productId":{"type":"string"},
            "rating":{"type":"integer","minimum":1,"maximum":5},
            "comment":{"type":"string"}
          },
          "required":["productId","rating","comment"]
        }}}},
        "responses":{
          "201":{"description":"Review created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Review"}}}},
          "403":{"description":"Forbidden"}
        }
      }
    },
    "/api/review/{productId}": {
      "get": {
        "tags":["Review"],
        "summary":"Get all reviews for a product",
        "parameters":[{"name":"productId","in":"path","required":true,"schema":{"type":"string"}}],
        "responses":{
          "200":{"description":"List of reviews","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Review"}}}}}
        }
      }
    },
    "/api/review/update/{reviewId}": {
      "put": {
        "tags":["Review"],
        "summary":"Update a review",
        "security":[{"BearerAuth":[]}],
        "parameters":[{"name":"reviewId","in":"path","required":true,"schema":{"type":"string"}}],
        "requestBody":{"required":true,"content":{"application/json":{"schema":{
          "type":"object",
          "properties":{
            "rating":{"type":"integer","minimum":1,"maximum":5},
            "comment":{"type":"string"}
          }
        }}}},
        "responses":{
          "200":{"description":"Review updated"},
          "403":{"description":"Forbidden"}
        }
      }
    },
    "/api/review/delete/{reviewId}": {
      "delete": {
        "tags":["Review"],
        "summary":"Delete a review",
        "security":[{"BearerAuth":[]}],
        "parameters":[{"name":"reviewId","in":"path","required":true,"schema":{"type":"string"}}],
        "responses":{
          "200":{"description":"Review deleted"},
          "403":{"description":"Forbidden"}
        }
      }
    },
    "/api/cart/add": {
      "post": {
        "tags":["Cart"],
        "summary":"Add item to cart",
        "security":[{"BearerAuth":[]}],
        "requestBody":{"required":true,"content":{"application/json":{"schema":{
          "type":"object",
          "properties":{
            "productId":{"type":"string"},
            "quantity":{"type":"integer","minimum":1}
          },
          "required":["productId","quantity"]
        }}}},
        "responses":{
          "200":{"description":"Item added"},
          "400":{"description":"Bad Request"}
        }
      }
    },
    "/api/cart": {
      "get": {
        "tags":["Cart"],
        "summary":"Get cart",
        "security":[{"BearerAuth":[]}],
        "responses":{
          "200":{"description":"Cart content"},
          "401":{"description":"Unauthorized"}
        }
      }
    },
    "/api/cart/update": {
      "put": {
        "tags":["Cart"],
        "summary":"Update cart item quantity",
        "security":[{"BearerAuth":[]}],
        "requestBody":{"required":true,"content":{"application/json":{"schema":{
          "type":"object",
          "properties":{
            "productId":{"type":"string"},
            "quantity":{"type":"integer","minimum":1}
          },
          "required":["productId","quantity"]
        }}}},
        "responses":{
          "200":{"description":"Cart updated"},
          "400":{"description":"Bad Request"}
        }
      }
    },
    "/api/cart/remove/{productId}": {
      "delete": {
        "tags":["Cart"],
        "summary":"Remove item from cart",
        "security":[{"BearerAuth":[]}],
        "parameters":[{"name":"productId","in":"path","required":true,"schema":{"type":"string"}}],
        "responses":{
          "200":{"description":"Item removed"}
        }
      }
    },
    "/api/cart/clear": {
      "delete": {
        "tags":["Cart"],
        "summary":"Clear cart",
        "security":[{"BearerAuth":[]}],
        "responses":{
          "200":{"description":"Cart cleared"}
        }
      }
    },
    "/api/order/create": {
      "post": {
        "tags":["Order"],
        "summary":"Create order",
        "security":[{"BearerAuth":[]}],
        "requestBody":{"required":true,"content":{"application/json":{"schema":{
          "type":"object",
          "properties":{
            "items":{"type":"array","items":{
              "type":"object",
              "properties":{
                "productId":{"type":"string"},
                "quantity":{"type":"integer"},
                "price":{"type":"number"}
              },
              "required":["productId","quantity","price"]
            }},
            "shippingAddress":{"type":"string"},
            "voucherId":{"type":"string"},
            "paymentMethod":{"type":"string","enum":["Online Banking","Cash on Delivery"]}
          },
          "required":["items","shippingAddress"]
        }}}},
        "responses":{
          "201":{"description":"Order created"}
        }
      }
    },
    "/api/order/my-orders": {
      "get": {
        "tags":["Order"],
        "summary":"Get user's own orders",
        "security":[{"BearerAuth":[]}],
        "responses":{
          "200":{"description":"List of orders"}
        }
      }
    },
    "/api/order": {
      "get": {
        "tags":["Order"],
        "summary":"Get all orders (admin only)",
        "security":[{"BearerAuth":[]}],
        "responses":{
          "200":{"description":"All orders"}
        }
      }
    },
    "/api/order/update/{id}": {
      "put": {
        "tags":["Order"],
        "summary":"Update order status (admin only)",
        "security":[{"BearerAuth":[]}],
        "parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],
        "requestBody":{"required":true,"content":{"application/json":{"schema":{
          "type":"object","properties":{"status":{"type":"string"}},"required":["status"]
        }}}},
        "responses":{
          "200":{"description":"Order status updated"}
        }
      }
    },
    "/api/order/cancel/{id}": {
      "delete": {
        "tags":["Order"],
        "summary":"Cancel own order (if unverified)",
        "security":[{"BearerAuth":[]}],
        "parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],
        "responses":{
          "200":{"description":"Order canceled"}
        }
      }
    },
    "/api/order/confirm-delivery/{id}": {
      "post": {
        "tags":["Order"],
        "summary":"Confirm delivery of order",
        "security":[{"BearerAuth":[]}],
        "parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],
        "responses":{
          "200":{"description":"Delivery confirmed"}
        }
      }
    },
    "/api/payment/create-vietqr": {
      "post": {
        "tags":["Payment"],
        "summary":"Generate VietQR code",
        "security":[{"BearerAuth":[]}],
        "requestBody":{"required":true,"content":{"application/json":{"schema":{
          "type":"object","properties":{"orderId":{"type":"string"}},"required":["orderId"]
        }}}},
        "responses":{
          "200":{"description":"QR code info"}
        }
      }
    },
    "/api/payment/log": {
      "post": {
        "tags":["Payment"],
        "summary":"Log payment status (IPN)",
        "security":[{"BearerAuth":[]}],
        "requestBody":{"required":true,"content":{"application/json":{"schema":{
          "type":"object",
          "properties":{
            "paymentId":{"type":"string"},
            "status":{"type":"string"},
            "payload":{"type":"object"}
          },
          "required":["paymentId","status"]
        }}}},
        "responses":{
          "200":{"description":"Logged"}
        }
      }
    },
    "/api/payment/verify/{paymentId}": {
      "get": {
        "tags":["Payment"],
        "summary":"Verify payment via polling",
        "security":[{"BearerAuth":[]}],
        "parameters":[{"name":"paymentId","in":"path","required":true,"schema":{"type":"string"}}],
        "responses":{
          "200":{"description":"Verification result"}
        }
      }
    },
    "/api/voucher/create": {
      "post": {
        "tags":["Voucher"],
        "summary":"Create voucher (admin only)",
        "security":[{"BearerAuth":[]}],
        "requestBody":{"required":true,"content":{"application/json":{"schema":{
          "type":"object",
          "properties":{
            "code":{"type":"string"},
            "discount_percentage":{"type":"number"},
            "max_discount":{"type":"number"},
            "subscriberOnly":{"type":"boolean"},
            "expires_at":{"type":"string","format":"date-time"}
          },
          "required":["code","discount_percentage","max_discount","expires_at"]
        }}}},
        "responses":{
          "201":{"description":"Voucher created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Voucher"}}}},
          "403":{"description":"Forbidden"}
        }
      }
    },
    "/api/voucher": {
      "get": {
        "tags":["Voucher"],
        "summary":"Get all vouchers",
        "responses":{
          "200":{"description":"List of vouchers","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Voucher"}}}}}
        }
      }
    },
    "/api/voucher/{id}": {
      "get": {
        "tags":["Voucher"],
        "summary":"Get voucher by ID",
        "parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],
        "responses":{
          "200":{"description":"Voucher detail","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Voucher"}}}},
          "404":{"description":"Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}
        }
      }
    },
    "/api/voucher/update/{id}": {
      "put": {
        "tags":["Voucher"],
        "summary":"Update voucher (admin only)",
        "security":[{"BearerAuth":[]}],
        "parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],
        "requestBody":{"required":true,"content":{"application/json":{"schema":{
          "type":"object",
          "properties":{
            "discount_percentage":{"type":"number"},
            "max_discount":{"type":"number"},
            "subscriberOnly":{"type":"boolean"},
            "expires_at":{"type":"string","format":"date-time"}
          }
        }}}},
        "responses":{
          "200":{"description":"Voucher updated"},
          "403":{"description":"Forbidden"}
        }
      }
    },
    "/api/voucher/delete/{id}": {
      "delete": {
        "tags":["Voucher"],
        "summary":"Delete voucher (admin only)",
        "security":[{"BearerAuth":[]}],
        "parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],
        "responses":{
          "200":{"description":"Voucher deleted"},
          "403":{"description":"Forbidden"}
        }
      }
    },
    "/api/subscription/create": {
      "post": {
        "tags":["Subscription"],
        "summary":"Create subscription (admin only)",
        "security":[{"BearerAuth":[]}],
        "requestBody":{"required":true,"content":{"application/json":{"schema":{
          "type":"object",
          "properties":{
            "name":{"type":"string"},
            "price":{"type":"number"},
            "duration":{"type":"integer"},
            "description":{"type":"string"},
            "perks":{"type":"array","items":{"type":"string"}}
          },
          "required":["name","price","duration"]
        }}}},
        "responses":{
          "201":{"description":"Subscription created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subscription"}}}},
          "403":{"description":"Forbidden"}
        }
      }
    },
    "/api/subscription": {
      "get": {
        "tags":["Subscription"],
        "summary":"Get all subscriptions",
        "responses":{
          "200":{"description":"List of subscriptions","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Subscription"}}}}}
        }
      }
    },
    "/api/subscription/{id}": {
      "get": {
        "tags":["Subscription"],
        "summary":"Get subscription by ID",
        "parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],
        "responses":{
          "200":{"description":"Subscription detail","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subscription"}}}},
          "404":{"description":"Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}
        }
      }
    },
    "/api/subscription/update/{id}": {
      "put": {
        "tags":["Subscription"],
        "summary":"Update subscription (admin only)",
        "security":[{"BearerAuth":[]}],
        "parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],
        "requestBody":{"required":true,"content":{"application/json":{"schema":{
          "type":"object","properties":{
            "name":{"type":"string"},
            "price":{"type":"number"},
            "duration":{"type":"integer"},
            "description":{"type":"string"},
            "perks":{"type":"array","items":{"type":"string"}}
          }
        }}}},
        "responses":{
          "200":{"description":"Subscription updated"},
          "403":{"description":"Forbidden"}
        }
      }
    },
    "/api/subscription/delete/{id}": {
      "delete": {
        "tags":["Subscription"],
        "summary":"Delete subscription (admin only)",
        "security":[{"BearerAuth":[]}],
        "parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],
        "responses":{
          "200":{"description":"Subscription deleted"},
          "403":{"description":"Forbidden"}
        }
      }
    },
    "/api/subscription/subscribed-users": {
      "get": {
        "tags":["Subscription"],
        "summary":"Get all subscribed users (admin only)",
        "security":[{"BearerAuth":[]}],
        "responses":{
          "200":{"description":"List of users"}
        }
      }
    },
    "/api/promptCategory/create": {
      "post": {
        "tags":["PromptCategory"],
        "summary":"Create prompt category (admin only)",
        "security":[{"BearerAuth":[]}],
        "requestBody":{"required":true,"content":{"application/json":{"schema":{
          "type":"object",
          "properties":{
            "name":{"type":"string"},
            "description":{"type":"string"},
            "type":{"type":"string"},
            "promptText":{"type":"string"},
            "isActive":{"type":"boolean"}
          },
          "required":["name","promptText"]
        }}}},
        "responses":{
          "201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PromptCategory"}}}},
          "403":{"description":"Forbidden"}
        }
      }
    },
    "/api/promptCategory": {
      "get": {
        "tags":["PromptCategory"],  
        "security":[{"BearerAuth":[]}],
        "summary":"Get all prompt categories",
        "responses":{
          "200":{"description":"List","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PromptCategory"}}}}}
        }
      }
    },
    "/api/promptCategory/{id}": {
      "get": {
        "tags":["PromptCategory"],
        "security":[{"BearerAuth":[]}],
        "parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],
        "responses":{
          "200":{"description":"Detail","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PromptCategory"}}}},
          "404":{"description":"Not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}
        }
      }
    },
    "/api/promptCategory/update/{id}": {
      "put": {
        "tags":["PromptCategory"],
        "security":[{"BearerAuth":[]}],
        "parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],
        "requestBody":{"required":true,"content":{"application/json":{"schema":{
          "type":"object"
        }}}},
        "responses":{
          "200":{"description":"Updated"},
          "403":{"description":"Forbidden"}
        }
      }
    },
    "/api/promptCategory/delete/{id}": {
      "delete": {
        "tags":["PromptCategory"],
        "security":[{"BearerAuth":[]}],
        "parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],
        "responses":{
          "200":{"description":"Deleted"},
          "403":{"description":"Forbidden"}
        }
      }
    },
    "/api/geminiAI/generate/default": {
      "post": {
        "tags":["GeminiAI"],
        "summary":"Generate default AI response (user prompt only)",
        "security":[{"BearerAuth":[]}],
        "requestBody":{"required":true,"content":{"application/json":{"schema":{
          "type":"object","properties":{"prompt":{"type":"string"}},"required":["prompt"]
        }}}},
        "responses":{
          "200":{"description":"OK","content":{"application/json":{"schema":{
            "type":"object","properties":{
              "message":{"type":"string"},
              "response":{"type":"string"}
            }
          }}}},
          "400":{"description":"Bad Request"},
          "500":{"description":"Server Error"}
        }
      }
    },
    "/api/geminiAI/generate/combined": {
      "post": {
        "tags":["GeminiAI"],
        "summary":"Generate combined AI response",
        "security":[{"BearerAuth":[]}],
        "requestBody":{"required":true,"content":{"application/json":{"schema":{
          "type":"object","properties":{
            "prompt":{"type":"string"},
            "promptCategoryId":{"type":"string"}
          },"required":["prompt"]
        }}}},
        "responses":{
          "200":{"description":"OK"},
          "400":{"description":"Bad Request"},
          "404":{"description":"Not Found"},
          "500":{"description":"Server Error"}
        }
      }
    }
  }
}
